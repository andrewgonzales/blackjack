// Generated by CoffeeScript 1.10.0
var assert;

assert = chai.assert;

describe('dealing', function() {
  var app, deck, hand;
  deck = null;
  hand = null;
  app = null;
  beforeEach(function() {
    app = new App();
    deck = new Deck();
    return hand = deck.dealPlayer();
  });
  describe('deal to player', function() {
    it('should deal two cards to the player in each round', function() {
      return assert.strictEqual(hand.length, 2);
    });
    it('should deal from the same deck', function() {
      var newHand;
      assert.strictEqual(deck.length, 50);
      newHand = deck.dealPlayer();
      assert.strictEqual(deck.length, 48);
      newHand = deck.dealPlayer();
      return assert.strictEqual(deck.length, 46);
    });
    return it('should deal a new round', function() {
      var results;
      results = [];
      while (!(hand.scores()[0] > 21)) {
        results.push(hand.hit());
      }
      return results;
    });
  });
  describe('dealer play', function() {
    it('should deal two cards to the dealer', function() {
      var dealerHand;
      dealerHand = deck.dealDealer();
      return assert.strictEqual(dealerHand.length, 2);
    });
    return it('should deal until the dealer total reaches 17', function() {
      debugger;
      var dealerHand;
      dealerHand = deck.dealDealer();
      app.dealerPlay();
      return assert.isAbove(dealerHand.scores()[0], 16);
    });
  });
  return describe('rules', function() {
    it("should bust when player's score reaches above 21", function() {
      while (!(hand.scores()[0] > 21)) {
        hand.hit();
      }
      return assert.strictEqual(app.attributes.scores['busts'], 1);
    });
    it('should alert push when hands are equal', function() {});
    it('should alert when dealer wins', function() {});
    return it('should alert when player wins', function() {});
  });
});
